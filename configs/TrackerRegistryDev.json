{
  "contractName": "SimpleTrackerRegistry",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "requiresWhitelist_",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "NodeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "isNew",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastSeen",
          "type": "uint256"
        }
      ],
      "name": "NodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "NodeWhitelistApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "NodeWhitelistRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "RequiresWhitelistChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "url_",
          "type": "string"
        }
      ],
      "name": "createOrUpdateNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "url_",
          "type": "string"
        }
      ],
      "name": "createOrUpdateNodeSelf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "getNode",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nodeAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "lastSeen",
              "type": "uint256"
            }
          ],
          "internalType": "struct NodeRegistry.Node",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getNodeByNumber",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nodeAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "lastSeen",
              "type": "uint256"
            }
          ],
          "internalType": "struct NodeRegistry.Node",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNodes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nodeAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "lastSeen",
              "type": "uint256"
            }
          ],
          "internalType": "struct NodeRegistry.Node[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "headNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "kickOut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nodeCount",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "removeNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeNodeSelf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setRequiresWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tailNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "whitelistApproveNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "whitelistRejectNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "streamId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "partition",
          "type": "uint256"
        }
      ],
      "name": "getTrackers",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"requiresWhitelist_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"NodeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"isNew\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastSeen\",\"type\":\"uint256\"}],\"name\":\"NodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"NodeWhitelistApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"NodeWhitelistRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"RequiresWhitelistChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"node\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"url_\",\"type\":\"string\"}],\"name\":\"createOrUpdateNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"url_\",\"type\":\"string\"}],\"name\":\"createOrUpdateNodeSelf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"getNode\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lastSeen\",\"type\":\"uint256\"}],\"internalType\":\"struct NodeRegistry.Node\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getNodeByNumber\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lastSeen\",\"type\":\"uint256\"}],\"internalType\":\"struct NodeRegistry.Node\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNodes\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lastSeen\",\"type\":\"uint256\"}],\"internalType\":\"struct NodeRegistry.Node[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"streamId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"partition\",\"type\":\"uint256\"}],\"name\":\"getTrackers\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"headNode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"kickOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nodeCount\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"removeNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeNodeSelf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setRequiresWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tailNode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"whitelistApproveNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"whitelistRejectNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"claimOwnership()\":{\"details\":\"Allows the pendingOwner address to finalize the transfer.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to set the pendingOwner address.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/heynow/streamr/network-contracts/contracts/SimpleTrackerRegistry.sol\":\"SimpleTrackerRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/heynow/streamr/network-contracts/contracts/NodeRegistry.sol\":{\"keccak256\":\"0xa2d60ab354f7a6a833b27d3e76522462b2a61c172591987c59a71dceee5e08d2\",\"urls\":[\"bzz-raw://2be64d7ab211535789b8089409272c039d4d9b4ca09547d767bbc2d313c4cd01\",\"dweb:/ipfs/QmTnJ13eoFwvV7xLKEFMrYCmnstEKEiAp5k28TkMDdjigY\"]},\"/home/heynow/streamr/network-contracts/contracts/Ownable.sol\":{\"keccak256\":\"0x8e5368ad3ec610556637ae08dd70ad0fb552b94d411a599ca6623bf66fb6fc52\",\"urls\":[\"bzz-raw://d1e510ab06e5a8cac23269350011bab848235bb9fefe327d7004ee3852eef35c\",\"dweb:/ipfs/QmYQjNk6DMqMZMYdjocb7fUcseEW1jBQTwA6v6qjC7YmDP\"]},\"/home/heynow/streamr/network-contracts/contracts/SimpleTrackerRegistry.sol\":{\"keccak256\":\"0x96844ee4595348477ee19fb997bf56ebc022b4f77b4c07c9ae7efd8184fa1fd8\",\"urls\":[\"bzz-raw://5627f8728e06365ad64a5e5f0c8853bca7fd74bcb25f97f41b11a8722833fb34\",\"dweb:/ipfs/QmRsDECrBH6iDTFyU4dK3b5tWKaAg1zBMaPCGCuYgpnNyj\"]},\"/home/heynow/streamr/network-contracts/contracts/TrackerRegistry.sol\":{\"keccak256\":\"0x135f790f889da86b0e8db0eef72f58625e86a724ead56a2d466a338e57c59273\",\"urls\":[\"bzz-raw://27dbc27b2580f61796172a8d2d1a3ad443692031654048d8845efb98a9210de2\",\"dweb:/ipfs/QmXW9hiV3cNCKAjbk4xuu7kjY2CuYWi6xigPPhFT6CkQmz\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516115af3803806115af83398101604081905261002f91610072565b600080546001600160a01b039093166001600160a01b03199093169290921790915560038054911515600160a01b0260ff60a01b199092169190911790556100ba565b60008060408385031215610084578182fd5b82516001600160a01b038116811461009a578283fd5b602084015190925080151581146100af578182fd5b809150509250929050565b6114e6806100c96000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806399e68eea116100ad578063bfdf086611610071578063bfdf086614610243578063e29581aa1461024b578063e30c397814610260578063e670c15d14610268578063f2fde38b1461027057610121565b806399e68eea146101ca5780639d209048146101dd578063aacf5415146101fd578063ae5b49611461021d578063b2b99ec91461023057610121565b80635668c8fb116100f45780635668c8fb146101745780635888799c146101875780635d8f7f2a1461019a5780636da49b83146101ad5780638da5cb5b146101c257610121565b806320a59a03146101265780632af575801461013b57806346c198f61461014e5780634e71e0c81461016c575b600080fd5b61013961013436600461110c565b610283565b005b610139610149366004611085565b6102ff565b610156610375565b60405161016391906112b9565b60405180910390f35b610139610384565b610139610182366004611085565b610412565b610139610195366004611085565b610451565b6101396101a83660046110b3565b6104c7565b6101b56104ff565b604051610163919061149b565b610156610516565b6101396101d836600461112c565b610525565b6101f06101eb366004611085565b610581565b604051610163919061147f565b61021061020b366004611167565b610660565b60405161016391906112cd565b6101f061022b3660046111aa565b610714565b61013961023e366004611085565b610861565b610156610894565b6102536108a3565b604051610163919061132d565b610156610a3a565b610139610a49565b61013961027e366004611085565b610a54565b6000546001600160a01b031633146102b65760405162461bcd60e51b81526004016102ad9061145c565b60405180910390fd5b6003805460ff60a01b1916600160a01b831515908102919091179091556040517f7623db9c426686f05cec977c4cadb8ff9657502540ca665ae347731114dac69d90600090a250565b6000546001600160a01b031633146103295760405162461bcd60e51b81526004016102ad9061145c565b6001600160a01b038116600081815260056020526040808220805460ff19166002179055517fbbe2a784aa6240d8175fa65a8459058efd8f44c5ab66caa2525fe9d6342108789190a250565b6003546001600160a01b031681565b6001546001600160a01b031633146103ae5760405162461bcd60e51b81526004016102ad90611432565b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b0316331461043c5760405162461bcd60e51b81526004016102ad9061145c565b610445816102ff565b61044e81610861565b50565b6000546001600160a01b0316331461047b5760405162461bcd60e51b81526004016102ad9061145c565b6001600160a01b038116600081815260056020526040808220805460ff19166001179055517fdfe83f699699403a4b116b6f9504680228c3f319bbf5ab26b48a81d3005d98b29190a250565b6000546001600160a01b031633146104f15760405162461bcd60e51b81526004016102ad9061145c565b6104fb8282610aa0565b5050565b600154600160a01b900467ffffffffffffffff1681565b6000546001600160a01b031681565b600354600160a01b900460ff16158061055b575060013360009081526005602052604090205460ff16600281111561055957fe5b145b6105775760405162461bcd60e51b81526004016102ad906113a2565b61044e3382610aa0565b610589610f05565b6001600160a01b03828116600090815260046020908152604091829020825160608101845281549094168452600180820180548551600261010094831615949094026000190190911692909204601f810185900485028301850190955284825291949385938581019391908301828280156106455780601f1061061a57610100808354040283529160200191610645565b820191906000526020600020905b81548152906001019060200180831161062857829003601f168201915b50505050508152602001600282015481525050915050919050565b606060008383604051602001610677929190611380565b60408051808303601f190181529190528051602090910120600154909150600090600160a01b900467ffffffffffffffff1682816106b157fe5b60408051600180825281830190925292909106925060609190816020015b60608152602001906001900390816106cf5790505090506106ef82610714565b602001518160008151811061070057fe5b602090810291909101015295945050505050565b61071c610f05565b600154600160a01b900467ffffffffffffffff16821061074e5760405162461bcd60e51b81526004016102ad906113c7565b6003546001600160a01b0316600081815260046020526040902060015b84811161079b576003909101546001600160a01b031660008181526004602052604090209092509060010161076b565b506040805160608101825282546001600160a01b031681526001808401805484516020600261010095841615959095026000190190921693909304601f810182900482028401820190955284835292938593808601939291908301828280156108455780601f1061081a57610100808354040283529160200191610845565b820191906000526020600020905b81548152906001019060200180831161082857829003601f168201915b5050505050815260200160028201548152505092505050919050565b6000546001600160a01b0316331461088b5760405162461bcd60e51b81526004016102ad9061145c565b61044e81610cd1565b6002546001600160a01b031681565b600154606090819067ffffffffffffffff600160a01b909104811690811180156108cc57600080fd5b5060405190808252806020026020018201604052801561090657816020015b6108f3610f05565b8152602001906001900390816108eb5790505b506003549091506001600160a01b031660005b600154600160a01b900467ffffffffffffffff16811015610a31576001600160a01b03828116600090815260046020908152604091829020825160608101845281549094168452600180820180548551600261010094831615949094026000190190911692909204601f810185900485028301850190955284825291949385938581019391908301828280156109f05780601f106109c5576101008083540402835291602001916109f0565b820191906000526020600020905b8154815290600101906020018083116109d357829003601f168201915b50505050508152602001600282015481525050848381518110610a0f57fe5b6020908102919091010152600301546001600160a01b03169150600101610919565b50909150505b90565b6001546001600160a01b031681565b610a5233610cd1565b565b6000546001600160a01b03163314610a7e5760405162461bcd60e51b81526004016102ad9061145c565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03821660009081526004602052604081206002810154909190610c4b57506040805160c0810182526001600160a01b0385811660608301818152608084018790524260a085015283526000602080850182905260025484168587015291815260048252939093208251805182546001600160a01b03191693169290921781558184015180516001959293928492610b4692888501929190910190610f2f565b5060409182015160029182015560208401516003840180546001600160a01b039283166001600160a01b03199182161790915594909201516004909301805493831693909416929092179092556001805467ffffffffffffffff600160a01b808304821684019091160267ffffffffffffffff60a01b19909116179055541615610bff576002546001600160a01b03908116600090815260046020526040902060030180546001600160a01b0319169186169190911790555b6003546001600160a01b0316610c2b57600380546001600160a01b0319166001600160a01b0386161790555b600280546001600160a01b0319166001600160a01b038616179055610c68565b8251610c609060018401906020860190610f2f565b504260028301555b6040518190610c7b906001850190611249565b6040518091039020856001600160a01b03167f7b8ea65757bf0d882563917834f76c4df069ea7e489c9fc65bf764289792e3348560000160020154604051610cc39190611492565b60405180910390a450505050565b6001600160a01b03811660009081526004602052604090206002810154610d0a5760405162461bcd60e51b81526004016102ad90611410565b60048101546001600160a01b031615610d5a576004818101546001600160a01b0390811660009081526020929092526040909120600380840154910180546001600160a01b031916919092161790555b60038101546001600160a01b031615610da85760038101546001600160a01b03908116600090815260046020819052604090912083820154910180546001600160a01b031916919092161790555b6001805460001967ffffffffffffffff600160a01b808404821692909201160267ffffffffffffffff60a01b199091161790556002546001600160a01b0383811691161415610e2457600280546001600160a01b0380821660009081526004602081905260409091200154166001600160a01b03199091161790555b6003546001600160a01b0383811691161415610e6b57600380546001600160a01b038082166000908152600460205260409020830154166001600160a01b03199091161790555b6001600160a01b038216600090815260046020526040812080546001600160a01b0319168155908181610ea16001830182610fad565b5060006002919091018190556003830180546001600160a01b031990811690915560049093018054909316909255506040516001600160a01b038416917fcfc24166db4bb677e857cacabd1541fb2b30645021b27c5130419589b84db52b91a25050565b604051806060016040528060006001600160a01b0316815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f7057805160ff1916838001178555610f9d565b82800160010185558215610f9d579182015b82811115610f9d578251825591602001919060010190610f82565b50610fa9929150610fed565b5090565b50805460018160011615610100020316600290046000825580601f10610fd3575061044e565b601f01602090049060005260206000209081019061044e91905b610a3791905b80821115610fa95760008155600101610ff3565b600082601f830112611017578081fd5b813567ffffffffffffffff8082111561102e578283fd5b604051601f8301601f19168101602001828111828210171561104e578485fd5b60405282815292508284830160200186101561106957600080fd5b8260208601602083013760006020848301015250505092915050565b600060208284031215611096578081fd5b81356001600160a01b03811681146110ac578182fd5b9392505050565b600080604083850312156110c5578081fd5b82356001600160a01b03811681146110db578182fd5b9150602083013567ffffffffffffffff8111156110f6578182fd5b61110285828601611007565b9150509250929050565b60006020828403121561111d578081fd5b813580151581146110ac578182fd5b60006020828403121561113d578081fd5b813567ffffffffffffffff811115611153578182fd5b61115f84828501611007565b949350505050565b60008060408385031215611179578182fd5b823567ffffffffffffffff81111561118f578283fd5b61119b85828601611007565b95602094909401359450505050565b6000602082840312156111bb578081fd5b5035919050565b60008151808452815b818110156111e7576020818501810151868301820152016111cb565b818111156111f85782602083870101525b50601f01601f19169290920160200192915050565b600060018060a01b03825116835260208201516060602085015261123460608501826111c2565b60408401516040860152809250505092915050565b6000808354600180821660008114611268576001811461127f576112ae565b60ff198316865260028304607f16860193506112ae565b600283048786526020808720875b838110156112a65781548a82015290850190820161128d565b505050860193505b509195945050505050565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561132057603f1988860301845261130e8583516111c2565b945092850192908501906001016112f2565b5092979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561132057603f1988860301845261136e85835161120d565b94509285019290850190600101611352565b60006040825261139360408301856111c2565b90508260208301529392505050565b6020808252600b908201526a1b9bdd105c1c1c9bdd995960aa1b604082015260600190565b60208082526029908201527f6765744e74684e6f64653a206e206d757374206265206c657373207468616e206040820152681b9bd91950dbdd5b9d60ba1b606082015260800190565b6020808252600890820152671b9bdd119bdd5b9960c21b604082015260600190565b60208082526010908201526f37b7363ca832b73234b733a7bbb732b960811b604082015260600190565b60208082526009908201526837b7363ca7bbb732b960b91b604082015260600190565b6000602082526110ac602083018461120d565b90815260200190565b67ffffffffffffffff9190911681526020019056fea2646970667358221220911109dc42badbd2480f189d51bb9e2e3c3ee5fe5c120137d74cbd8f31dd87f664736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806399e68eea116100ad578063bfdf086611610071578063bfdf086614610243578063e29581aa1461024b578063e30c397814610260578063e670c15d14610268578063f2fde38b1461027057610121565b806399e68eea146101ca5780639d209048146101dd578063aacf5415146101fd578063ae5b49611461021d578063b2b99ec91461023057610121565b80635668c8fb116100f45780635668c8fb146101745780635888799c146101875780635d8f7f2a1461019a5780636da49b83146101ad5780638da5cb5b146101c257610121565b806320a59a03146101265780632af575801461013b57806346c198f61461014e5780634e71e0c81461016c575b600080fd5b61013961013436600461110c565b610283565b005b610139610149366004611085565b6102ff565b610156610375565b60405161016391906112b9565b60405180910390f35b610139610384565b610139610182366004611085565b610412565b610139610195366004611085565b610451565b6101396101a83660046110b3565b6104c7565b6101b56104ff565b604051610163919061149b565b610156610516565b6101396101d836600461112c565b610525565b6101f06101eb366004611085565b610581565b604051610163919061147f565b61021061020b366004611167565b610660565b60405161016391906112cd565b6101f061022b3660046111aa565b610714565b61013961023e366004611085565b610861565b610156610894565b6102536108a3565b604051610163919061132d565b610156610a3a565b610139610a49565b61013961027e366004611085565b610a54565b6000546001600160a01b031633146102b65760405162461bcd60e51b81526004016102ad9061145c565b60405180910390fd5b6003805460ff60a01b1916600160a01b831515908102919091179091556040517f7623db9c426686f05cec977c4cadb8ff9657502540ca665ae347731114dac69d90600090a250565b6000546001600160a01b031633146103295760405162461bcd60e51b81526004016102ad9061145c565b6001600160a01b038116600081815260056020526040808220805460ff19166002179055517fbbe2a784aa6240d8175fa65a8459058efd8f44c5ab66caa2525fe9d6342108789190a250565b6003546001600160a01b031681565b6001546001600160a01b031633146103ae5760405162461bcd60e51b81526004016102ad90611432565b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b0316331461043c5760405162461bcd60e51b81526004016102ad9061145c565b610445816102ff565b61044e81610861565b50565b6000546001600160a01b0316331461047b5760405162461bcd60e51b81526004016102ad9061145c565b6001600160a01b038116600081815260056020526040808220805460ff19166001179055517fdfe83f699699403a4b116b6f9504680228c3f319bbf5ab26b48a81d3005d98b29190a250565b6000546001600160a01b031633146104f15760405162461bcd60e51b81526004016102ad9061145c565b6104fb8282610aa0565b5050565b600154600160a01b900467ffffffffffffffff1681565b6000546001600160a01b031681565b600354600160a01b900460ff16158061055b575060013360009081526005602052604090205460ff16600281111561055957fe5b145b6105775760405162461bcd60e51b81526004016102ad906113a2565b61044e3382610aa0565b610589610f05565b6001600160a01b03828116600090815260046020908152604091829020825160608101845281549094168452600180820180548551600261010094831615949094026000190190911692909204601f810185900485028301850190955284825291949385938581019391908301828280156106455780601f1061061a57610100808354040283529160200191610645565b820191906000526020600020905b81548152906001019060200180831161062857829003601f168201915b50505050508152602001600282015481525050915050919050565b606060008383604051602001610677929190611380565b60408051808303601f190181529190528051602090910120600154909150600090600160a01b900467ffffffffffffffff1682816106b157fe5b60408051600180825281830190925292909106925060609190816020015b60608152602001906001900390816106cf5790505090506106ef82610714565b602001518160008151811061070057fe5b602090810291909101015295945050505050565b61071c610f05565b600154600160a01b900467ffffffffffffffff16821061074e5760405162461bcd60e51b81526004016102ad906113c7565b6003546001600160a01b0316600081815260046020526040902060015b84811161079b576003909101546001600160a01b031660008181526004602052604090209092509060010161076b565b506040805160608101825282546001600160a01b031681526001808401805484516020600261010095841615959095026000190190921693909304601f810182900482028401820190955284835292938593808601939291908301828280156108455780601f1061081a57610100808354040283529160200191610845565b820191906000526020600020905b81548152906001019060200180831161082857829003601f168201915b5050505050815260200160028201548152505092505050919050565b6000546001600160a01b0316331461088b5760405162461bcd60e51b81526004016102ad9061145c565b61044e81610cd1565b6002546001600160a01b031681565b600154606090819067ffffffffffffffff600160a01b909104811690811180156108cc57600080fd5b5060405190808252806020026020018201604052801561090657816020015b6108f3610f05565b8152602001906001900390816108eb5790505b506003549091506001600160a01b031660005b600154600160a01b900467ffffffffffffffff16811015610a31576001600160a01b03828116600090815260046020908152604091829020825160608101845281549094168452600180820180548551600261010094831615949094026000190190911692909204601f810185900485028301850190955284825291949385938581019391908301828280156109f05780601f106109c5576101008083540402835291602001916109f0565b820191906000526020600020905b8154815290600101906020018083116109d357829003601f168201915b50505050508152602001600282015481525050848381518110610a0f57fe5b6020908102919091010152600301546001600160a01b03169150600101610919565b50909150505b90565b6001546001600160a01b031681565b610a5233610cd1565b565b6000546001600160a01b03163314610a7e5760405162461bcd60e51b81526004016102ad9061145c565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03821660009081526004602052604081206002810154909190610c4b57506040805160c0810182526001600160a01b0385811660608301818152608084018790524260a085015283526000602080850182905260025484168587015291815260048252939093208251805182546001600160a01b03191693169290921781558184015180516001959293928492610b4692888501929190910190610f2f565b5060409182015160029182015560208401516003840180546001600160a01b039283166001600160a01b03199182161790915594909201516004909301805493831693909416929092179092556001805467ffffffffffffffff600160a01b808304821684019091160267ffffffffffffffff60a01b19909116179055541615610bff576002546001600160a01b03908116600090815260046020526040902060030180546001600160a01b0319169186169190911790555b6003546001600160a01b0316610c2b57600380546001600160a01b0319166001600160a01b0386161790555b600280546001600160a01b0319166001600160a01b038616179055610c68565b8251610c609060018401906020860190610f2f565b504260028301555b6040518190610c7b906001850190611249565b6040518091039020856001600160a01b03167f7b8ea65757bf0d882563917834f76c4df069ea7e489c9fc65bf764289792e3348560000160020154604051610cc39190611492565b60405180910390a450505050565b6001600160a01b03811660009081526004602052604090206002810154610d0a5760405162461bcd60e51b81526004016102ad90611410565b60048101546001600160a01b031615610d5a576004818101546001600160a01b0390811660009081526020929092526040909120600380840154910180546001600160a01b031916919092161790555b60038101546001600160a01b031615610da85760038101546001600160a01b03908116600090815260046020819052604090912083820154910180546001600160a01b031916919092161790555b6001805460001967ffffffffffffffff600160a01b808404821692909201160267ffffffffffffffff60a01b199091161790556002546001600160a01b0383811691161415610e2457600280546001600160a01b0380821660009081526004602081905260409091200154166001600160a01b03199091161790555b6003546001600160a01b0383811691161415610e6b57600380546001600160a01b038082166000908152600460205260409020830154166001600160a01b03199091161790555b6001600160a01b038216600090815260046020526040812080546001600160a01b0319168155908181610ea16001830182610fad565b5060006002919091018190556003830180546001600160a01b031990811690915560049093018054909316909255506040516001600160a01b038416917fcfc24166db4bb677e857cacabd1541fb2b30645021b27c5130419589b84db52b91a25050565b604051806060016040528060006001600160a01b0316815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f7057805160ff1916838001178555610f9d565b82800160010185558215610f9d579182015b82811115610f9d578251825591602001919060010190610f82565b50610fa9929150610fed565b5090565b50805460018160011615610100020316600290046000825580601f10610fd3575061044e565b601f01602090049060005260206000209081019061044e91905b610a3791905b80821115610fa95760008155600101610ff3565b600082601f830112611017578081fd5b813567ffffffffffffffff8082111561102e578283fd5b604051601f8301601f19168101602001828111828210171561104e578485fd5b60405282815292508284830160200186101561106957600080fd5b8260208601602083013760006020848301015250505092915050565b600060208284031215611096578081fd5b81356001600160a01b03811681146110ac578182fd5b9392505050565b600080604083850312156110c5578081fd5b82356001600160a01b03811681146110db578182fd5b9150602083013567ffffffffffffffff8111156110f6578182fd5b61110285828601611007565b9150509250929050565b60006020828403121561111d578081fd5b813580151581146110ac578182fd5b60006020828403121561113d578081fd5b813567ffffffffffffffff811115611153578182fd5b61115f84828501611007565b949350505050565b60008060408385031215611179578182fd5b823567ffffffffffffffff81111561118f578283fd5b61119b85828601611007565b95602094909401359450505050565b6000602082840312156111bb578081fd5b5035919050565b60008151808452815b818110156111e7576020818501810151868301820152016111cb565b818111156111f85782602083870101525b50601f01601f19169290920160200192915050565b600060018060a01b03825116835260208201516060602085015261123460608501826111c2565b60408401516040860152809250505092915050565b6000808354600180821660008114611268576001811461127f576112ae565b60ff198316865260028304607f16860193506112ae565b600283048786526020808720875b838110156112a65781548a82015290850190820161128d565b505050860193505b509195945050505050565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561132057603f1988860301845261130e8583516111c2565b945092850192908501906001016112f2565b5092979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561132057603f1988860301845261136e85835161120d565b94509285019290850190600101611352565b60006040825261139360408301856111c2565b90508260208301529392505050565b6020808252600b908201526a1b9bdd105c1c1c9bdd995960aa1b604082015260600190565b60208082526029908201527f6765744e74684e6f64653a206e206d757374206265206c657373207468616e206040820152681b9bd91950dbdd5b9d60ba1b606082015260800190565b6020808252600890820152671b9bdd119bdd5b9960c21b604082015260600190565b60208082526010908201526f37b7363ca832b73234b733a7bbb732b960811b604082015260600190565b60208082526009908201526837b7363ca7bbb732b960b91b604082015260600190565b6000602082526110ac602083018461120d565b90815260200190565b67ffffffffffffffff9190911681526020019056fea2646970667358221220911109dc42badbd2480f189d51bb9e2e3c3ee5fe5c120137d74cbd8f31dd87f664736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "120:540:6:-:0;;;190:101;5:9:-1;2:2;;;27:1;24;17:12;2:2;190:101:6;;;;;;;;;;;;;;;;;;;;;578:5:5;:14;;-1:-1:-1;;;;;578:14:5;;;-1:-1:-1;;;;;;578:14:5;;;;;;;;;;1574:17:4::1;:38:::0;;;::::1;;-1:-1:-1::0;;;1574:38:4::1;-1:-1:-1::0;;;;1574:38:4;;::::1;::::0;;;::::1;::::0;;120:540:6;;281:393:-1;;;410:2;398:9;389:7;385:23;381:32;378:2;;;-1:-1;;416:12;378:2;83:13;;-1:-1;;;;;933:54;;1058:35;;1048:2;;-1:-1;;1097:12;1048:2;579;626:22;;221:13;468:74;;-1:-1;845:13;;838:21;1179:32;;1169:2;;-1:-1;;1215:12;1169:2;587:71;;;;372:302;;;;;;;120:540:6;;;;;;",
  "deployedSourceMap": "120:540:6:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;120:540:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;4504:147:4;;;;;;;;;:::i;:::-;;4170:181;;;;;;;;;:::i;1332:23::-;;;:::i;:::-;;;;;;;;;;;;;;;;1124:226:5;;;:::i;4361:137:4:-;;;;;;;;;:::i;3978:182::-;;;;;;;;;:::i;1794:127::-;;;;;;;;;:::i;1274:23::-;;;:::i;:::-;;;;;;;;237:20:5;;;:::i;1927:125:4:-;;;;;;;;;:::i;1625:162::-;;;;;;;;;:::i;:::-;;;;;;;;297:361:6;;;;;;;;;:::i;:::-;;;;;;;;4775:437:4;;;;;;;;;:::i;2954:99::-;;;;;;;;;:::i;1303:23::-;;;:::i;5218:418::-;;;:::i;:::-;;;;;;;;263:27:5;;;:::i;3058:73:4:-;;;:::i;930:102:5:-;;;;;;;;;:::i;4504:147:4:-;740:5:5;;-1:-1:-1;;;;;740:5:5;726:10;:19;718:41;;;;-1:-1:-1;;;718:41:5;;;;;;;;;;;;;;;;;4573:17:4::1;:25:::0;;-1:-1:-1;;;;4573:25:4::1;-1:-1:-1::0;;;4573:25:4;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;4613:31:::1;::::0;::::1;::::0;-1:-1:-1;;4613:31:4::1;4504:147:::0;:::o;4170:181::-;740:5:5;;-1:-1:-1;;;;;740:5:5;726:10;:19;718:41;;;;-1:-1:-1;;;718:41:5;;;;;;;;;-1:-1:-1;;;;;4247:22:4;::::1;;::::0;;;:9:::1;:22;::::0;;;;;:48;;-1:-1:-1;;4247:48:4::1;4272:23;4247:48;::::0;;4310:34;::::1;::::0;4247:22;4310:34:::1;4170:181:::0;:::o;1332:23::-;;;-1:-1:-1;;;;;1332:23:4;;:::o;1124:226:5:-;1189:12;;-1:-1:-1;;;;;1189:12:5;1175:10;:26;1167:55;;;;-1:-1:-1;;;1167:55:5;;;;;;;;;1265:12;;;1258:5;;1237:41;;-1:-1:-1;;;;;1265:12:5;;;;1258:5;;;;1237:41;;;1296:12;;;;1288:20;;-1:-1:-1;;;;;;1288:20:5;;;-1:-1:-1;;;;;1296:12:5;;1288:20;;;;1318:25;;;1124:226::o;4361:137:4:-;740:5:5;;-1:-1:-1;;;;;740:5:5;726:10;:19;718:41;;;;-1:-1:-1;;;718:41:5;;;;;;;;;4426:32:4::1;4446:11;4426:19;:32::i;:::-;4468:23;4479:11;4468:10;:23::i;:::-;4361:137:::0;:::o;3978:182::-;740:5:5;;-1:-1:-1;;;;;740:5:5;726:10;:19;718:41;;;;-1:-1:-1;;;718:41:5;;;;;;;;;-1:-1:-1;;;;;4056:22:4;::::1;;::::0;;;:9:::1;:22;::::0;;;;;:48;;-1:-1:-1;;4056:48:4::1;4081:23;4056:48;::::0;;4119:34;::::1;::::0;4056:22;4119:34:::1;3978:182:::0;:::o;1794:127::-;740:5:5;;-1:-1:-1;;;;;740:5:5;726:10;:19;718:41;;;;-1:-1:-1;;;718:41:5;;;;;;;;;1883:31:4::1;1903:4;1909;1883:19;:31::i;:::-;1794:127:::0;;:::o;1274:23::-;;;-1:-1:-1;;;1274:23:4;;;;;:::o;237:20:5:-;;;-1:-1:-1;;;;;237:20:5;;:::o;1927:125:4:-;1165:17;;-1:-1:-1;;;1165:17:4;;;;1164:18;;:70;;-1:-1:-1;1211:23:4;1196:10;1186:21;;;;:9;:21;;;;;;;;:48;;;;;;;;;1164:70;1156:94;;;;-1:-1:-1;;;1156:94:4;;;;;;;;;2008:37:::1;2028:10;2040:4;2008:19;:37::i;1625:162::-:0;1684:11;;:::i;:::-;-1:-1:-1;;;;;1738:18:4;;;1707:28;1738:18;;;:5;:18;;;;;;;;;1766:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1766:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;1738:18;;1766:14;1738:18;;1766:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1625:162;;;:::o;297:361:6:-;388:15;415:12;451:8;461:9;440:31;;;;;;;;;;;;;;26:21:-1;;;-1:-1;;22:32;6:49;;440:31:6;;;430:42;;49:4:-1;430:42:6;;;;513:9;;430:42;;-1:-1:-1;482:12:6;;-1:-1:-1;;;513:9:6;;;;430:42;513:9;497:25;;;;559:15;;;572:1;559:15;;;;;;;;;497:25;;;;;-1:-1:-1;532:24:6;;559:15;;;;;;;;;;;;;;;;;;;;;532:42;;598:24;614:7;598:15;:24::i;:::-;:28;;;584:8;593:1;584:11;;;;;;;;;;;;;;;;;:42;643:8;297:361;-1:-1:-1;;;;;297:361:6:o;4775:437:4:-;4829:11;;:::i;:::-;4864:9;;-1:-1:-1;;;4864:9:4;;;;4860:13;;4852:67;;;;-1:-1:-1;;;4852:67:4;;;;;;;;;4958:8;;-1:-1:-1;;;;;4958:8:4;4929:26;5007:25;;;:5;:25;;;;;4958:8;5042:141;5075:1;5064:7;:12;5042:141;;5123:6;;;;;-1:-1:-1;;;;;5123:6:4;;5147:25;;;:5;:25;;;;;5123:6;;-1:-1:-1;5147:25:4;5123:6;5078:9;5042:141;;;-1:-1:-1;5192:13:4;;;;;;;;;;-1:-1:-1;;;;;5192:13:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5192:13:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4775:437;;;:::o;2954:99::-;740:5:5;;-1:-1:-1;;;;;740:5:5;726:10;:19;718:41;;;;-1:-1:-1;;;718:41:5;;;;;;;;;3022:24:4::1;3034:11;3022;:24::i;1303:23::-:0;;;-1:-1:-1;;;;;1303:23:4;;:::o;5218:418::-;5321:9;;5259:13;;;;5321:9;-1:-1:-1;;;5321:9:4;;;;;;5310:21;;2:2:-1;;;;27:1;24;17:12;2:2;5310:21:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;5370:8:4;;5284:47;;-1:-1:-1;;;;;;5370:8:4;5341:26;5388:216;5420:9;;-1:-1:-1;;;5420:9:4;;;;5410:19;;5388:216;;;-1:-1:-1;;;;;5486:25:4;;;5455:28;5486:25;;;:5;:25;;;;;;;;;5525:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5525:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;5486:25;;5525:27;5486:25;;5525:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;5535:7;5525:18;;;;;;;;;;;;;;;;;:27;5587:6;;;-1:-1:-1;;;;;5587:6:4;;-1:-1:-1;5587:6:4;5431:9;5388:216;;;-1:-1:-1;5620:9:4;;-1:-1:-1;;5218:418:4;;:::o;263:27:5:-;;;-1:-1:-1;;;;;263:27:5;;:::o;3058:73:4:-;3101:23;3113:10;3101:11;:23::i;:::-;3058:73::o;930:102:5:-;740:5;;-1:-1:-1;;;;;740:5:5;726:10;:19;718:41;;;;-1:-1:-1;;;718:41:5;;;;;;;;;1002:12:::1;:23:::0;;-1:-1:-1;;;;;;1002:23:5::1;-1:-1:-1::0;;;;;1002:23:5;;;::::1;::::0;;;::::1;::::0;;930:102::o;2058:890:4:-;-1:-1:-1;;;;;2178:18:4;;2147:28;2178:18;;;:5;:18;;;;;2233:15;;;;2178:18;;2147:28;2230:637;;-1:-1:-1;2312:132:4;;;2338:70;;;;;-1:-1:-1;;;;;2338:70:4;;;2312:132;;;2338:70;;;;;;;;;2391:15;2338:70;;;;2312:132;;-1:-1:-1;2338:70:4;2312:132;;;;;;2416:8;;;;2312:132;;;;2291:18;;;:5;:18;;;;;;:153;;;;;;-1:-1:-1;;;;;;2291:153:4;;;;;;;;;;;;;;;-1:-1:-1;;2291:18:4;;:153;:18;;:153;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2291:153:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2291:153:4;;;-1:-1:-1;;;;;;2291:153:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:11;;;-1:-1:-1;;;2458:11:4;;;;;;;;;;;-1:-1:-1;;;;2458:11:4;;;;;;2486:8;;:22;2483:157;;2571:8;;-1:-1:-1;;;;;2571:8:4;;;2527:35;2565:15;;;:5;:15;;;;;2598:13;;:27;;-1:-1:-1;;;;;;2598:27:4;;;;;;;;;;2483:157;2656:8;;-1:-1:-1;;;;;2656:8:4;2653:65;;2696:8;:22;;-1:-1:-1;;;;;;2696:22:4;-1:-1:-1;;;;;2696:22:4;;;;;2653:65;2732:8;:22;;-1:-1:-1;;;;;;2732:22:4;-1:-1:-1;;;;;2732:22:4;;;;;2230:637;;;2792:17;;;;:10;;;;:17;;;;;:::i;:::-;-1:-1:-1;2841:15:4;2823;;;:33;2230:637;2881:60;;2918:5;;2881:60;;2906:10;;;;2881:60;;;;;;;;;;2893:11;-1:-1:-1;;;;;2881:60:4;;2925:1;:6;;:15;;;2881:60;;;;;;;;;;;;;;;2058:890;;;;:::o;3136:836::-;-1:-1:-1;;;;;3228:18:4;;3197:28;3228:18;;;:5;:18;;;;;3264:15;;;;3256:41;;;;-1:-1:-1;;;3256:41:4;;;;;;;;;3310:6;;;;-1:-1:-1;;;;;3310:6:4;:20;3307:136;;3383:5;3389:6;;;;-1:-1:-1;;;;;3389:6:4;;;3345:35;3383:13;;;;;;;;;;;;3426:6;;;;;3410:13;;:22;;-1:-1:-1;;;;;;3410:22:4;3426:6;;;;3410:22;;;3307:136;3455:6;;;;-1:-1:-1;;;;;3455:6:4;:20;3452:136;;3534:6;;;;-1:-1:-1;;;;;3534:6:4;;;3490:35;3528:13;;;:5;:13;;;;;;;;3571:6;;;;3555:13;;:22;;-1:-1:-1;;;;;;3555:22:4;3571:6;;;;3555:22;;;3452:136;3597:9;:11;;-1:-1:-1;;3597:11:4;-1:-1:-1;;;3597:11:4;;;;;;;;;;;-1:-1:-1;;;;3597:11:4;;;;;;3636:8;;-1:-1:-1;;;;;3621:23:4;;;3636:8;;3621:23;3618:132;;;3698:8;;;-1:-1:-1;;;;;3698:8:4;;;3660:29;3692:15;;;:5;:15;;;;;;;;3732:7;;;-1:-1:-1;;;;;;3721:18:4;;;;;;3618:132;3777:8;;-1:-1:-1;;;;;3762:23:4;;;3777:8;;3762:23;3759:132;;;3839:8;;;-1:-1:-1;;;;;3839:8:4;;;3801:29;3833:15;;;:5;:15;;;;;3873:7;;;;-1:-1:-1;;;;;;3862:18:4;;;;;;3759:132;-1:-1:-1;;;;;3908:18:4;;;;;;:5;:18;;;;;3901:25;;-1:-1:-1;;;;;;3901:25:4;;;3908:18;;;3901:25;;;;3908:18;3901:25;:::i;:::-;-1:-1:-1;3901:25:4;;;;;;;;;;;;;;-1:-1:-1;;;;;;3901:25:4;;;;;;;;;;;;;;;;;;-1:-1:-1;3941:24:4;;-1:-1:-1;;;;;3941:24:4;;;;;;3136:836;;:::o;120:540:6:-;;;;;;;;;;-1:-1:-1;;;;;120:540:6;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:540:6;;;-1:-1:-1;120:540:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:442:-1;;376:3;369:4;361:6;357:17;353:27;343:2;;-1:-1;;384:12;343:2;431:6;418:20;15867:18;;15859:6;15856:30;15853:2;;;-1:-1;;15889:12;15853:2;15522;15516:9;15962;15943:17;;-1:-1;;15939:33;15548:17;;16030:4;15548:17;15608:34;;;15644:22;;;15605:62;15602:2;;;-1:-1;;15670:12;15602:2;15522;15689:22;524:21;;;444:74;-1:-1;444:74;624:16;;;16030:4;624:16;621:25;-1:-1;618:2;;;659:1;;649:12;618:2;18748:6;16030:4;566:6;562:17;16030:4;600:5;596:16;18725:30;18804:1;16030:4;18795:6;600:5;18786:16;;18779:27;;;;336:380;;;;;861:241;;965:2;953:9;944:7;940:23;936:32;933:2;;;-1:-1;;971:12;933:2;72:20;;-1:-1;;;;;18418:54;;19261:35;;19251:2;;-1:-1;;19300:12;19251:2;1023:63;927:175;-1:-1;;;927:175;1109:472;;;1240:2;1228:9;1219:7;1215:23;1211:32;1208:2;;;-1:-1;;1246:12;1208:2;72:20;;-1:-1;;;;;18418:54;;19261:35;;19251:2;;-1:-1;;19300:12;19251:2;1298:63;-1:-1;1426:2;1411:18;;1398:32;1450:18;1439:30;;1436:2;;;-1:-1;;1472:12;1436:2;1502:63;1557:7;1548:6;1537:9;1533:22;1502:63;;;1492:73;;;1202:379;;;;;;1588:235;;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;-1:-1;;1695:12;1657:2;219:6;206:20;19407:5;18330:13;18323:21;19385:5;19382:32;19372:2;;-1:-1;;19418:12;1830:347;;1944:2;1932:9;1923:7;1919:23;1915:32;1912:2;;;-1:-1;;1950:12;1912:2;2008:17;1995:31;2046:18;2038:6;2035:30;2032:2;;;-1:-1;;2068:12;2032:2;2098:63;2153:7;2144:6;2133:9;2129:22;2098:63;;;2088:73;1906:271;-1:-1;;;;1906:271;2184:472;;;2315:2;2303:9;2294:7;2290:23;2286:32;2283:2;;;-1:-1;;2321:12;2283:2;2379:17;2366:31;2417:18;2409:6;2406:30;2403:2;;;-1:-1;;2439:12;2403:2;2469:63;2524:7;2515:6;2504:9;2500:22;2469:63;;;2459:73;2569:2;2608:22;;;;791:20;;-1:-1;;;;2277:379;2663:241;;2767:2;2755:9;2746:7;2742:23;2738:32;2735:2;;;-1:-1;;2773:12;2735:2;-1:-1;791:20;;2729:175;-1:-1;2729:175;5643:327;;5778:5;16677:12;17414:6;17409:3;17402:19;-1:-1;18893:101;18907:6;18904:1;18901:13;18893:101;;;17451:4;18974:11;;;;;18968:18;18955:11;;;;;18948:39;18922:10;18893:101;;;19009:6;19006:1;19003:13;19000:2;;;-1:-1;17451:4;19065:6;17446:3;19056:16;;19049:27;19000:2;-1:-1;15962:9;19165:14;-1:-1;;19161:28;5926:39;;;;17451:4;5926:39;;5725:245;-1:-1;;5725:245;8972:717;;15867:18;;18429:42;;;9184:16;9178:23;18418:54;3427:3;3420:37;9348:4;9341:5;9337:16;9331:23;9105:4;9348;9378:3;9374:14;9367:38;9420:73;9105:4;9100:3;9096:14;9474:12;9420:73;;;9582:4;9575:5;9571:16;9565:23;9582:4;9646:3;9642:14;10550:37;9673:11;;;;;9078:611;;;;;10836:260;;-1:-1;6493:5;6487:12;6527:1;;6516:9;6512:17;6540:1;6535:268;;;;6814:1;6809:425;;;;6505:729;;6535:268;-1:-1;;6740:25;;6728:38;;6609:1;6594:17;;6613:4;6590:28;6780:16;;;-1:-1;6535:268;;6809:425;6878:1;6867:9;6863:17;16504:3;-1:-1;16494:14;16536:4;;-1:-1;16523:18;-1:-1;7067:130;7081:6;7078:1;7075:13;7067:130;;;7140:14;;7127:11;;;7120:35;7174:15;;;;7096:12;;7067:130;;;-1:-1;;;7211:16;;;-1:-1;6505:729;-1:-1;11081:10;;10960:136;-1:-1;;;;;10960:136;11103:213;-1:-1;;;;;18418:54;;;;3420:37;;11221:2;11206:18;;11192:124;11323:401;;11511:2;;11500:9;11496:18;11511:2;11532:17;11525:47;11586:128;3841:5;16677:12;17414:6;17409:3;17402:19;17442:14;11500:9;17442:14;3853:103;;17442:14;11511:2;4013:6;4009:17;11500:9;4000:27;;3988:39;;11511:2;4108:5;16177:14;-1:-1;4147:360;4172:6;4169:1;4166:13;4147:360;;;4224:20;;11500:9;4228:4;4224:20;;4219:3;4212:33;3033:66;3095:3;4279:6;4273:13;3033:66;;;4293:92;-1:-1;4486:14;;;;17111;;;;4194:1;4187:9;4147:360;;;-1:-1;11578:136;;11482:242;-1:-1;;;;;;;11482:242;11731:445;;11941:2;;11930:9;11926:18;11941:2;11962:17;11955:47;12016:150;4875:5;16677:12;17414:6;17409:3;17402:19;17442:14;11930:9;17442:14;4887:114;;17442:14;11941:2;5058:6;5054:17;11930:9;5045:27;;5033:39;;11941:2;5164:5;16177:14;-1:-1;5203:393;5228:6;5225:1;5222:13;5203:393;;;4224:20;;11930:9;5284:4;5280:20;;5275:3;5268:33;3257:88;3341:3;5335:6;5329:13;3257:88;;;5349:114;-1:-1;5575:14;;;;17111;;;;5250:1;5243:9;5203:393;;12183:412;;12349:2;12370:17;12363:47;12424:78;12349:2;12338:9;12334:18;12488:6;12424:78;;;12416:86;;10580:5;12581:2;12570:9;12566:18;10550:37;12320:275;;;;;;12602:407;12793:2;12807:47;;;7473:2;12778:18;;;17402:19;-1:-1;;;17442:14;;;7489:34;7542:12;;;12764:245;13016:407;13207:2;13221:47;;;7793:2;13192:18;;;17402:19;7829:34;17442:14;;;7809:55;-1:-1;;;7884:12;;;7877:33;7929:12;;;13178:245;13430:407;13621:2;13635:47;;;8180:1;13606:18;;;17402:19;-1:-1;;;17442:14;;;8195:31;8245:12;;;13592:245;13844:407;14035:2;14049:47;;;8496:2;14020:18;;;17402:19;-1:-1;;;17442:14;;;8512:39;8570:12;;;14006:245;14258:407;14449:2;14463:47;;;8821:1;14434:18;;;17402:19;-1:-1;;;17442:14;;;8836:32;8887:12;;;14420:245;14672:345;;14832:2;14853:17;14846:47;14907:100;14832:2;14821:9;14817:18;14993:6;14907:100;;15024:213;10550:37;;;15142:2;15127:18;;15113:124;15244:209;18635:18;18624:30;;;;10788:36;;15360:2;15345:18;;15331:122",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\nimport \"./TrackerRegistry.sol\";\nimport \"./NodeRegistry.sol\";\n\ncontract SimpleTrackerRegistry is TrackerRegistry, NodeRegistry{\n\n    constructor(address owner, bool requiresWhitelist_) NodeRegistry(owner, requiresWhitelist_) public {}\n\n    function getTrackers(string memory streamId, uint partition) public override view returns (string[] memory) {\n        bytes32 hash = keccak256(abi.encode(streamId, partition));\n        uint nodeNum = uint256(hash) % nodeCount;\n        string[] memory trackers = new string[](1);\n        trackers[0] = getNodeByNumber(nodeNum).url;\n        return trackers;\n    }\n}\n",
  "sourcePath": "/home/heynow/streamr/network-contracts/contracts/SimpleTrackerRegistry.sol",
  "ast": {
    "absolutePath": "/home/heynow/streamr/network-contracts/contracts/SimpleTrackerRegistry.sol",
    "exportedSymbols": {
      "SimpleTrackerRegistry": [
        897
      ]
    },
    "id": 898,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 824,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "id": 825,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:6"
      },
      {
        "absolutePath": "/home/heynow/streamr/network-contracts/contracts/TrackerRegistry.sol",
        "file": "./TrackerRegistry.sol",
        "id": 826,
        "nodeType": "ImportDirective",
        "scope": 898,
        "sourceUnit": 947,
        "src": "58:31:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/heynow/streamr/network-contracts/contracts/NodeRegistry.sol",
        "file": "./NodeRegistry.sol",
        "id": 827,
        "nodeType": "ImportDirective",
        "scope": 898,
        "sourceUnit": 743,
        "src": "90:28:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 828,
              "name": "TrackerRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 946,
              "src": "154:15:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TrackerRegistry_$946",
                "typeString": "contract TrackerRegistry"
              }
            },
            "id": 829,
            "nodeType": "InheritanceSpecifier",
            "src": "154:15:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 830,
              "name": "NodeRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 742,
              "src": "171:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NodeRegistry_$742",
                "typeString": "contract NodeRegistry"
              }
            },
            "id": 831,
            "nodeType": "InheritanceSpecifier",
            "src": "171:12:6"
          }
        ],
        "contractDependencies": [
          742,
          822,
          946
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 897,
        "linearizedBaseContracts": [
          897,
          742,
          822,
          946
        ],
        "name": "SimpleTrackerRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "289:2:6",
              "statements": []
            },
            "documentation": null,
            "id": 843,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 838,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 833,
                    "src": "255:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 839,
                    "name": "requiresWhitelist_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 835,
                    "src": "262:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 840,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 837,
                  "name": "NodeRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 742,
                  "src": "242:12:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_NodeRegistry_$742_$",
                    "typeString": "type(contract NodeRegistry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "242:39:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 843,
                  "src": "202:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "202:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "requiresWhitelist_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 843,
                  "src": "217:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "201:40:6"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "289:0:6"
            },
            "scope": 897,
            "src": "190:101:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              945
            ],
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "405:253:6",
              "statements": [
                {
                  "assignments": [
                    855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 855,
                      "mutability": "mutable",
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 895,
                      "src": "415:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 854,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 863,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 859,
                            "name": "streamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "451:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 860,
                            "name": "partition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "461:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 857,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "440:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "440:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "440:31:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 856,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "430:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "415:57:6"
                },
                {
                  "assignments": [
                    865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 865,
                      "mutability": "mutable",
                      "name": "nodeNum",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 895,
                      "src": "482:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 864,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "482:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 872,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 868,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "505:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "497:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "497:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "497:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 870,
                      "name": "nodeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "513:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "497:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "482:40:6"
                },
                {
                  "assignments": [
                    877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 877,
                      "mutability": "mutable",
                      "name": "trackers",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 895,
                      "src": "532:24:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 875,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "532:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 876,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "532:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "572:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "559:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 878,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "563:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 879,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "563:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "532:42:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 884,
                        "name": "trackers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "584:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 886,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "593:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "584:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 888,
                            "name": "nodeNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "614:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 887,
                          "name": "getNodeByNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 688,
                          "src": "598:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_Node_$218_memory_ptr_$",
                            "typeString": "function (uint256) view returns (struct NodeRegistry.Node memory)"
                          }
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "598:24:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Node_$218_memory_ptr",
                          "typeString": "struct NodeRegistry.Node memory"
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "url",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 215,
                      "src": "598:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "584:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "584:42:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 893,
                    "name": "trackers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "643:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 853,
                  "id": 894,
                  "nodeType": "Return",
                  "src": "636:15:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aacf5415",
            "id": 896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrackers",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 849,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "365:8:6"
            },
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "streamId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 896,
                  "src": "318:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "partition",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 896,
                  "src": "342:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "317:40:6"
            },
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 852,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 896,
                  "src": "388:15:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 850,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "388:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 851,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "388:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "387:17:6"
            },
            "scope": 897,
            "src": "297:361:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 898,
        "src": "120:540:6"
      }
    ],
    "src": "0:661:6"
  },
  "legacyAST": {
    "absolutePath": "/home/heynow/streamr/network-contracts/contracts/SimpleTrackerRegistry.sol",
    "exportedSymbols": {
      "SimpleTrackerRegistry": [
        897
      ]
    },
    "id": 898,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 824,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "id": 825,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:6"
      },
      {
        "absolutePath": "/home/heynow/streamr/network-contracts/contracts/TrackerRegistry.sol",
        "file": "./TrackerRegistry.sol",
        "id": 826,
        "nodeType": "ImportDirective",
        "scope": 898,
        "sourceUnit": 947,
        "src": "58:31:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/heynow/streamr/network-contracts/contracts/NodeRegistry.sol",
        "file": "./NodeRegistry.sol",
        "id": 827,
        "nodeType": "ImportDirective",
        "scope": 898,
        "sourceUnit": 743,
        "src": "90:28:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 828,
              "name": "TrackerRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 946,
              "src": "154:15:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TrackerRegistry_$946",
                "typeString": "contract TrackerRegistry"
              }
            },
            "id": 829,
            "nodeType": "InheritanceSpecifier",
            "src": "154:15:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 830,
              "name": "NodeRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 742,
              "src": "171:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NodeRegistry_$742",
                "typeString": "contract NodeRegistry"
              }
            },
            "id": 831,
            "nodeType": "InheritanceSpecifier",
            "src": "171:12:6"
          }
        ],
        "contractDependencies": [
          742,
          822,
          946
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 897,
        "linearizedBaseContracts": [
          897,
          742,
          822,
          946
        ],
        "name": "SimpleTrackerRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "289:2:6",
              "statements": []
            },
            "documentation": null,
            "id": 843,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 838,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 833,
                    "src": "255:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 839,
                    "name": "requiresWhitelist_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 835,
                    "src": "262:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 840,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 837,
                  "name": "NodeRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 742,
                  "src": "242:12:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_NodeRegistry_$742_$",
                    "typeString": "type(contract NodeRegistry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "242:39:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 843,
                  "src": "202:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "202:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "requiresWhitelist_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 843,
                  "src": "217:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "201:40:6"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "289:0:6"
            },
            "scope": 897,
            "src": "190:101:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              945
            ],
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "405:253:6",
              "statements": [
                {
                  "assignments": [
                    855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 855,
                      "mutability": "mutable",
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 895,
                      "src": "415:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 854,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 863,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 859,
                            "name": "streamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "451:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 860,
                            "name": "partition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "461:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 857,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "440:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "440:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "440:31:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 856,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "430:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "415:57:6"
                },
                {
                  "assignments": [
                    865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 865,
                      "mutability": "mutable",
                      "name": "nodeNum",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 895,
                      "src": "482:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 864,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "482:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 872,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 868,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "505:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "497:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "497:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "497:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 870,
                      "name": "nodeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "513:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "497:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "482:40:6"
                },
                {
                  "assignments": [
                    877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 877,
                      "mutability": "mutable",
                      "name": "trackers",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 895,
                      "src": "532:24:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 875,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "532:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 876,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "532:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "572:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "559:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 878,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "563:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 879,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "563:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "532:42:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 884,
                        "name": "trackers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "584:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 886,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "593:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "584:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 888,
                            "name": "nodeNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "614:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 887,
                          "name": "getNodeByNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 688,
                          "src": "598:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_Node_$218_memory_ptr_$",
                            "typeString": "function (uint256) view returns (struct NodeRegistry.Node memory)"
                          }
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "598:24:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Node_$218_memory_ptr",
                          "typeString": "struct NodeRegistry.Node memory"
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "url",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 215,
                      "src": "598:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "584:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "584:42:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 893,
                    "name": "trackers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "643:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 853,
                  "id": 894,
                  "nodeType": "Return",
                  "src": "636:15:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aacf5415",
            "id": 896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrackers",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 849,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "365:8:6"
            },
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "streamId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 896,
                  "src": "318:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "partition",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 896,
                  "src": "342:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "317:40:6"
            },
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 852,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 896,
                  "src": "388:15:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 850,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "388:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 851,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "388:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "387:17:6"
            },
            "scope": 897,
            "src": "297:361:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 898,
        "src": "120:540:6"
      }
    ],
    "src": "0:661:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-04-28T10:04:14.295Z",
  "devdoc": {
    "methods": {
      "claimOwnership()": {
        "details": "Allows the pendingOwner address to finalize the transfer."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to set the pendingOwner address.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}