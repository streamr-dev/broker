name: Eslint, Test and Publish

on: [push]

jobs:
  test:
    name: Run eslint and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - run: npm ci
      - run: npm run eslint
      - run: npm run build --if-present
      - run: npm run test-unit
      - name: streamr-docker-dev
        run: |
          git clone --depth 1 https://github.com/streamr-dev/streamr-docker-dev.git
          sudo ifconfig docker0 10.200.10.1/24
          ${GITHUB_WORKSPACE}/streamr-docker-dev/streamr-docker-dev/bin.sh start engine-and-editor cassandra nginx --wait
      - run: npm run test-integration
        env:
          CI: true
          LOG_LEVEL: warn

  docker:
    needs: [test]
    name: Build, test, and publish Docker images
    runs-on: ubuntu-latest

    # run job only for master and tags
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - run: docker build -t $OWNER/$IMAGE_NAME:taggit .
      - run: bash .ci_scripts/smoke_test.sh
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push streamr/broker-node:dev
        run: bash .ci_scripts/deploy_docker.sh dev
      - name: Push streamr/broker-node:latest and streamr/broker-node:${GITHUB_REF/refs\/tags\//}
        run: bash .ci_scripts/deploy_docker.sh production ${GITHUB_REF/refs\/tags\//}
        if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    env:
      OWNER: streamr
      IMAGE_NAME: broker-node

  publish:
    needs: [test]
    name: Publishing master using Node 14
    runs-on: ubuntu-latest

    # run job only for tags and skip for cron
    if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    steps:
      - name: Get the release version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: npm ci
        run: |
          npm ci
          npm run build --if-present

      - name: Publish beta ${{ steps.get_version.outputs.VERSION }}
        # if tag includes beta keyword
        if: contains(steps.get_version.outputs.VERSION, 'beta') == true
        run: npm publish --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish latest ${{ steps.get_version.outputs.VERSION }}
        # if tag doesn't include beta keyword
        if: contains(steps.get_version.outputs.VERSION, 'beta') == false
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
