os: linux
dist: xenial
language: node_js
node_js:
- 13.11.0
branches:
  only:
  - master
  - "/^v\\d+\\.\\d+(\\.\\d+)?(-\\S*)?$/"
env:
  global:
  - OWNER=streamr
  - IMAGE_NAME=broker-node
import:
 - source: streamr-dev/travis-ci:aws-staging-secrets.yml@master
 - source: streamr-dev/travis-ci:npm-secrets.yml@master
 - source: streamr-dev/travis-ci:docker-secrets.yml@master
before_install:
- npm i -g npm@6.14.2
- npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
jobs:
  include:
  - stage: Tests
    name: Integration Tests
    script:
    - sudo /etc/init.d/mysql stop
    - git clone https://github.com/streamr-dev/streamr-docker-dev.git
    - sudo ifconfig docker0 10.200.10.1/24
    - $TRAVIS_BUILD_DIR/streamr-docker-dev/streamr-docker-dev/bin.sh start --except tracker --except broker-node-no-storage-1 --except broker-node-no-storage-2 --except broker-node-storage-1 --wait
    - npm run test-integration
  - stage: Tests
    name: Unit Tests
    script:
    - npm run test-unit
  - stage: Tests
    name: eslint
    script: npm run eslint
  - stage: publish
    if: tag IS present
    script: npm publish
  - stage: Deploy Staging
    if: NOT type IN (pull_request)
    script:
    - mkdir $TRAVIS_BUILD_DIR/build
    - mkdir $TRAVIS_BUILD_DIR/upload
    - cp -r src  build
    - cp app.js build
    - cp package.json build
    - cp package-lock.json build
    - mv .codedeploy-stg/appspec.yml build/appspec.yml
    - mv .codedeploy-stg/ build/.codedeploy
    - cd build; tar -czvf $TRAVIS_BUILD_DIR/upload/broker-${TRAVIS_JOB_ID}.tar .;
      tar -czvf $TRAVIS_BUILD_DIR/upload/latest.tar .;
    - cd $TRAVIS_BUILD_DIR;
    deploy:
    - provider: s3
      access_key_id: $ACCESS_KEY_STG
      secret_access_key: $SECRET_ACCESS_KEY_STG
      bucket: eu-west-1-stg-streamr-vault
      upload_dir: network-node/releases
      acl: private
      region: eu-west-1
      local_dir: upload
    - provider: codedeploy
      access_key_id: $ACCESS_KEY_STG
      secret_access_key: $SECRET_ACCESS_KEY_STG
      bucket: eu-west-1-stg-streamr-vault
      key: network-node/releases/broker-${TRAVIS_JOB_ID}.tar
      application: eu-west-1-stg-network-node-codedeploy
      deployment_group: eu-west-1-stg-network-node-deployment-group
      region: eu-west-1
    - provider: codedeploy
      access_key_id: $ACCESS_KEY_STG
      secret_access_key: $SECRET_ACCESS_KEY_STG
      bucket: eu-west-1-stg-streamr-vault
      key: network-node/releases/broker-${TRAVIS_JOB_ID}.tar
      application: eu-west-1-stg-network-node-storage-codedeploy
      deployment_group: eu-west-1-stg-network-node-storage-deployment-group
      region: eu-west-1
  - stage: Build docker (Dev/Nightly)
    if: tag IS blank
    install: true
    script:
    - docker build -t $OWNER/$IMAGE_NAME:taggit .
    - .travis_scripts/smoke_test.sh
    after_failure:
    - docker ps;
    - docker logs streamr_dev_tracker;
    - docker logs streamr_dev_broker-node-no-storage-1;
    deploy:
    - provider: script
      script: bash .travis_scripts/deploy_docker.sh dev
  - stage: Build docker (Production)
    if: tag IS present
    install: true
    script:
    - docker build -t $OWNER/$IMAGE_NAME:taggit .
    - .travis_scripts/smoke_test.sh
    after_failure:
    - docker ps;
    - docker logs streamr_dev_tracker;
    - docker logs streamr_dev_broker-node-no-storage-1;
    deploy:
    - provider: script
      script: bash .travis_scripts/deploy_docker.sh production
      on:
        tags: true
