os: linux
dist: xenial
language: node_js
node_js:
- 13.11.0
branches:
  only:
  - master
  - "/^v\\d+\\.\\d+(\\.\\d+)?(-\\S*)?$/"
env:
  global:
  - OWNER=streamr
  - IMAGE_NAME=broker-node
import:
- source: streamr-dev/travis-ci:aws-staging-secrets.yml@master
- source: streamr-dev/travis-ci:npm-secrets.yml@master
- source: streamr-dev/travis-ci:docker-secrets.yml@master
before_install:
- npm i -g npm@6.14.2
- npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
jobs:
  allow_failures:
  - env: CAN_FAIL=True
  include:
  - stage: Tests
    name: Integration Tests
    script:
    - sudo /etc/init.d/mysql stop
    - git clone https://github.com/streamr-dev/streamr-docker-dev.git
    - sudo ifconfig docker0 10.200.10.1/24
    - "$TRAVIS_BUILD_DIR/streamr-docker-dev/streamr-docker-dev/bin.sh start --except
      tracker-1 --except tracker-2 --except tracker-3 --except broker-node-no-storage-1
      --except broker-node-no-storage-2 --except broker-node-storage-1 --wait"
    - npm run test-integration
  - stage: Tests
    name: Unit Tests
    script:
    - npm run test-unit
  - stage: Tests
    name: eslint
    script: npm run eslint
  - stage: Tests
    name: streamr-client tests
    env:
    - CAN_FAIL=True
    script:
    - docker build -t $OWNER/$IMAGE_NAME:local .
    - ".travis_scripts/streamr-client-test.sh"
  - stage: publish
    if: tag IS present
    script: npm publish
  - stage: Deploy Staging
    if: NOT type IN (pull_request)
    script:
    - mkdir $TRAVIS_BUILD_DIR/build
    - mkdir $TRAVIS_BUILD_DIR/upload
    - cp -r src  build
    - cp app.js build
    - cp package.json build
    - cp package-lock.json build
    - mv .codedeploy-stg/appspec.yml build/appspec.yml
    - mv .codedeploy-stg/ build/.codedeploy
    - cd build; tar -czvf $TRAVIS_BUILD_DIR/upload/broker-${TRAVIS_JOB_ID}.tar .;
      tar -czvf $TRAVIS_BUILD_DIR/upload/latest.tar .;
    - cd $TRAVIS_BUILD_DIR;
    deploy:
    - provider: s3
      access_key_id: "$ACCESS_KEY_STG"
      secret_access_key: "$SECRET_ACCESS_KEY_STG"
      bucket: eu-west-1-stg-streamr-vault
      upload_dir: network-node/releases
      skip_cleanup: true
      acl: private
      region: eu-west-1
      local_dir: upload
    - provider: codedeploy
      access_key_id: "$ACCESS_KEY_STG"
      secret_access_key: "$SECRET_ACCESS_KEY_STG"
      bucket: eu-west-1-stg-streamr-vault
      key: network-node/releases/broker-${TRAVIS_JOB_ID}.tar
      application: eu-west-1-stg-network-node-codedeploy
      deployment_group: eu-west-1-stg-network-node-deployment-group
      region: eu-west-1
    - provider: codedeploy
      access_key_id: "$ACCESS_KEY_STG"
      secret_access_key: "$SECRET_ACCESS_KEY_STG"
      bucket: eu-west-1-stg-streamr-vault
      key: network-node/releases/broker-${TRAVIS_JOB_ID}.tar
      application: eu-west-1-stg-network-node-storage-codedeploy
      deployment_group: eu-west-1-stg-network-node-storage-deployment-group
      region: eu-west-1
  - stage: Build docker (Dev/Nightly)
    if: tag IS blank
    install: true
    script:
    - docker build -t $OWNER/$IMAGE_NAME:taggit .
    - ".travis_scripts/smoke_test.sh"
    after_failure:
    - docker ps;
    - docker logs streamr_dev_tracker;
    - docker logs streamr_dev_broker-node-no-storage-1;
    deploy:
    - provider: script
      script: bash .travis_scripts/deploy_docker.sh dev
  - stage: Build docker (Production)
    if: tag IS present
    install: true
    script:
    - docker build -t $OWNER/$IMAGE_NAME:taggit .
    - ".travis_scripts/smoke_test.sh"
    after_failure:
    - docker ps;
    - docker logs streamr_dev_tracker;
    - docker logs streamr_dev_broker-node-no-storage-1;
    deploy:
    - provider: script
      script: bash .travis_scripts/deploy_docker.sh production
      on:
        tags: true
notifications:
  slack:
    secure: daBvcxQx3ns3xivI61LiFdg7nNr3/gtN6PtOu51RhTQxXFQ/XAwLArBJoexNjKVvX5J3kiEbE46Y7D9aV0BDcCvE6msrj4OLdzb5VCjYUTfpyu6twZdiQWgaqZcLUDtkosL8fUXGbOt+EUtvP5x5ohg8x62pjMi9GhmJcnfyhkAKdrq5JXTsP8ptj+W5V7depf0IC0JpRWVT6Pbr4p4eBUEujgAMGcnuW82G0lusymi5cYB9Qc/0q25KW8lqux8miJn6l+W046z/iWHQE0lYrtFn5pzt+wCmsxR6oibChsrLVosygmp8KikciThrGK7ueXe9ED4/y4cnQirmuzloDAAd7oHQiQAJ17tpfyXqKq5bMuqpqe+73e9T6IvjjBGCkM9nAC5qy4dhI/17QVk8+pbV6em1AOpWOnLEapdw8oVqExGnTAzeeC2FYxFywmQNbsHrnz/GF0oBjmqCqpY1guXZDs8r88Ngo8JWHeuX0MBGfMElLJ3+Nhmjcb+6UiACOjiwBQOP2SzkiQU5Z5pnEk6Xxy5uycFzN08Dv+Lq1sWd88haBmizlRUFGzVKkfqD4bxCucMjcrcJv8f9bHBlr1BqVIZKrkAhXuqLyjY7NeuW8pjGnj0QIalTds+rEbhUSKmi+lb9DwKdeWDwBxUboOFnbU6Maa3V5aoR2h7QAUI=
  if: branch = master
  on_success: change
  on_failure: always
  on_pull_requests: false